


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             lab1, CODE, READONLY
    2 00000000         
    3 00000000                 EXPORT           IIR_asm
    4 00000000         ; R1 = input array pointer
    5 00000000         ; R2 = Output array pointer
    6 00000000         ; R3 = Length integer
    7 00000000         ; R4 = Coeffecient array pointer
    8 00000000         IIR_asm
    9 00000000         
   10 00000000 B530            PUSH             {R5, R4, LR} ; push onto stack
   11 00000002 F04F 0400       MOV              R4, #0      ; value of n
   12 00000006 F04F 0500       MOV              R5, #0      ; memory address of
                                                             x[n]
   13 0000000A         
   14 0000000A         ; set values of floating point registers to zero before 
                       filtering loop
   15 0000000A EE00 4A90       VMOV             S1, R4      ; coeffiecient regi
                                                            ster
   16 0000000E EE01 4A10       VMOV             S2, R4      ; floating point va
                                                            lue value of x[n]
   17 00000012 EE01 4A90       VMOV             S3, R4      ; value of x[n-1]
   18 00000016 EE02 4A10       VMOV             S4, R4      ; value of x[n-2]
   19 0000001A EE02 4A90       VMOV             S5, R4      ; value of y[n-1]
   20 0000001E EE03 4A10       VMOV             S6, R4      ; value of y[n-2]
   21 00000022 EE03 4A90       VMOV             S7, R4      ; value of y[n]
   22 00000026         
   23 00000026         Filter                               ;
   24 00000026         ; For index n
   25 00000026 EDD3 0A00       VLDR             S1, [R3]    ; load b0
   26 0000002A F850 5024       LDR              R5, [R0, R4, lsl #2] ; set regi
                                                            ster 5 address R0+4
                                                            *R4
   27 0000002E EE01 5A10       VMOV             S2, R5      ; load x[n]
   28 00000032 EE60 3A81       VMUL.F32         S7, S1, S2  ; y = b0*x[n] 
   29 00000036         
   30 00000036         
   31 00000036         ;for index n-1
   32 00000036 EDD3 0A01       VLDR             S1, [R3, #4] ; load b1
   33 0000003A EE40 3AA1       VMLA.F32         S7, S1, S3  ; y = y + b1*x[n-1]
                                                            
   34 0000003E EDD3 0A03       VLDR             S1, [R3, #12] ; load a1
   35 00000042 EE40 3AA2       VMLA.F32         S7, S1, S5  ; y = y +a1*y[n-1]
   36 00000046         
   37 00000046         ;for index n-2
   38 00000046 EDD3 0A02       VLDR             S1, [R3, #8] ; load b2
   39 0000004A EE40 3A82       VMLA.F32         S7, S1, S4  ; y = y + b1*x[n-1]
                                                            
   40 0000004E EDD3 0A04       VLDR             S1, [R3, #16] ; load a2
   41 00000052 EE40 3A83       VMLA.F32         S7, S1, S6  ; y = y +a1*y[n-1]
   42 00000056         
   43 00000056         ; store output and load values for next itteration
   44 00000056         Store                                ;
   45 00000056 EEB0 3A62       VMOV.F32         S6, S5      ; y[n-2] <- y[n-1]d
                                                            ispl
   46 0000005A EEF0 2A63       VMOV.F32         S5, S7      ; y[n-1] <- y[n]
   47 0000005E EDC1 3A00       VSTR             S7, [R1]    ; store result in i
                                                            ndex "n" of output 
                                                            array
   48 00000062 F101 0104       ADD              R1, R1, #4  ; increase output a



ARM Macro Assembler    Page 2 


                                                            rray address by 4 b
                                                            its (next index)
   49 00000066 EEB0 2A61       VMOV.F32         S4, S3      ; x[n-2]<- x[n-1]
   50 0000006A EEF0 1A41       VMOV.F32         S3, S2      ; x[n-1] <- x[n]
   51 0000006E F104 0401       ADD              R4, R4, #1  ; increase n by 1
   52 00000072 4294            CMP              R4, R2      ; check if index nu
                                                            mber n is equal to 
                                                            input array length 
                                                            
   53 00000074 D1D7            BNE              Filter      ; branch to loop if
                                                             not equal
   54 00000076         
   55 00000076         Exit                                 ;
   56 00000076 E8BD 4030       POP              {R5, R4, LR} ;
   57 0000007A                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\assembly.d -o.\objects\assembly.o -IP:\ecse-426\Lab1\
RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\K
eil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include --predefine=
"__UVISION_VERSION SETA 515" --predefine="_RTE_ SETA 1" --predefine="STM32F407x
x SETA 1" --list=.\listings\assembly.lst Sources\Assembly.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Exit 00000076

Symbol: Exit
   Definitions
      At line 55 in file Sources\Assembly.s
   Uses
      None
Comment: Exit unused
Filter 00000026

Symbol: Filter
   Definitions
      At line 23 in file Sources\Assembly.s
   Uses
      At line 53 in file Sources\Assembly.s
Comment: Filter used once
IIR_asm 00000000

Symbol: IIR_asm
   Definitions
      At line 8 in file Sources\Assembly.s
   Uses
      At line 3 in file Sources\Assembly.s
Comment: IIR_asm used once
Store 00000056

Symbol: Store
   Definitions
      At line 44 in file Sources\Assembly.s
   Uses
      None
Comment: Store unused
lab1 00000000

Symbol: lab1
   Definitions
      At line 1 in file Sources\Assembly.s
   Uses
      None
Comment: lab1 unused
5 symbols
339 symbols in table
